version: 2.1
orbs:
  heroku: circleci/heroku@0.0.10
  slack: circleci/slack@4.1.1

workflows:
  build-and-deploy:
    jobs:
      - build
      - heroku/deploy-via-git: # Use the pre-configured job, deploy-via-git
          requires:
            - build
#          filters:
#            branches:
#              only: master

jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.2-node-browsers
      - image: circleci/mysql:5.7

    steps:
      - checkout # Pull the repo

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo docker-php-ext-install pdo_mysql
      - run: sudo apt install -y mariadb-client
      - run: npm run set-env # set the env

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

#       prepare the database
      - run: php artisan migrate --env=production --force
      - slack/notify:
            event: pass
            template: success_tagged_deploy_1
      - slack/notify:
          event: fail
          template: basic_fail_1

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
#      - run: ./vendor/bin/codecept build
#      - run: ./vendor/bin/codecept run

